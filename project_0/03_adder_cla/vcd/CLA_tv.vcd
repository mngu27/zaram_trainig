$date
	Wed Jul  3 17:21:09 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module CLA_tb $end
$var wire 32 ! o_s [31:0] $end
$var wire 1 " o_c $end
$var reg 32 # i_a [31:0] $end
$var reg 32 $ i_b [31:0] $end
$var reg 1 % i_c $end
$var reg 256 & taskState [255:0] $end
$var reg 256 ' vcd_file [255:0] $end
$var integer 32 ( err [31:0] $end
$var integer 32 ) i [31:0] $end
$scope module u_CLA $end
$var wire 32 * i_a [31:0] $end
$var wire 32 + i_b [31:0] $end
$var wire 1 % i_c $end
$var wire 7 , w_c [6:0] $end
$var wire 32 - o_s [31:0] $end
$var wire 1 " o_c $end
$scope module u_CLA_4bit_block_0 $end
$var wire 4 . i_a [3:0] $end
$var wire 4 / i_b [3:0] $end
$var wire 1 % i_c $end
$var wire 4 0 o_s [3:0] $end
$var wire 1 1 o_c $end
$scope module u_adder $end
$var wire 4 2 i_a [3:0] $end
$var wire 4 3 i_b [3:0] $end
$var wire 1 % i_c $end
$var wire 1 4 w_c $end
$var wire 4 5 o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 6 G $end
$var wire 4 7 i_a [3:0] $end
$var wire 4 8 i_b [3:0] $end
$var wire 1 % i_c $end
$var wire 1 1 o_c $end
$var wire 4 9 p [3:0] $end
$var wire 4 : g [3:0] $end
$var wire 1 ; P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_1 $end
$var wire 4 < i_a [3:0] $end
$var wire 4 = i_b [3:0] $end
$var wire 1 > i_c $end
$var wire 4 ? o_s [3:0] $end
$var wire 1 @ o_c $end
$scope module u_adder $end
$var wire 4 A i_a [3:0] $end
$var wire 4 B i_b [3:0] $end
$var wire 1 > i_c $end
$var wire 1 C w_c $end
$var wire 4 D o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 E G $end
$var wire 4 F i_a [3:0] $end
$var wire 4 G i_b [3:0] $end
$var wire 1 > i_c $end
$var wire 1 @ o_c $end
$var wire 4 H p [3:0] $end
$var wire 4 I g [3:0] $end
$var wire 1 J P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_2 $end
$var wire 4 K i_a [3:0] $end
$var wire 4 L i_b [3:0] $end
$var wire 1 M i_c $end
$var wire 4 N o_s [3:0] $end
$var wire 1 O o_c $end
$scope module u_adder $end
$var wire 4 P i_a [3:0] $end
$var wire 4 Q i_b [3:0] $end
$var wire 1 M i_c $end
$var wire 1 R w_c $end
$var wire 4 S o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 T G $end
$var wire 4 U i_a [3:0] $end
$var wire 4 V i_b [3:0] $end
$var wire 1 M i_c $end
$var wire 1 O o_c $end
$var wire 4 W p [3:0] $end
$var wire 4 X g [3:0] $end
$var wire 1 Y P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_3 $end
$var wire 4 Z i_a [3:0] $end
$var wire 4 [ i_b [3:0] $end
$var wire 1 \ i_c $end
$var wire 4 ] o_s [3:0] $end
$var wire 1 ^ o_c $end
$scope module u_adder $end
$var wire 4 _ i_a [3:0] $end
$var wire 4 ` i_b [3:0] $end
$var wire 1 \ i_c $end
$var wire 1 a w_c $end
$var wire 4 b o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 c G $end
$var wire 4 d i_a [3:0] $end
$var wire 4 e i_b [3:0] $end
$var wire 1 \ i_c $end
$var wire 1 ^ o_c $end
$var wire 4 f p [3:0] $end
$var wire 4 g g [3:0] $end
$var wire 1 h P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_4 $end
$var wire 4 i i_a [3:0] $end
$var wire 4 j i_b [3:0] $end
$var wire 1 k i_c $end
$var wire 4 l o_s [3:0] $end
$var wire 1 m o_c $end
$scope module u_adder $end
$var wire 4 n i_a [3:0] $end
$var wire 4 o i_b [3:0] $end
$var wire 1 k i_c $end
$var wire 1 p w_c $end
$var wire 4 q o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 r G $end
$var wire 4 s i_a [3:0] $end
$var wire 4 t i_b [3:0] $end
$var wire 1 k i_c $end
$var wire 1 m o_c $end
$var wire 4 u p [3:0] $end
$var wire 4 v g [3:0] $end
$var wire 1 w P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_5 $end
$var wire 4 x i_a [3:0] $end
$var wire 4 y i_b [3:0] $end
$var wire 1 z i_c $end
$var wire 4 { o_s [3:0] $end
$var wire 1 | o_c $end
$scope module u_adder $end
$var wire 4 } i_a [3:0] $end
$var wire 4 ~ i_b [3:0] $end
$var wire 1 z i_c $end
$var wire 1 !" w_c $end
$var wire 4 "" o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 #" G $end
$var wire 4 $" i_a [3:0] $end
$var wire 4 %" i_b [3:0] $end
$var wire 1 z i_c $end
$var wire 1 | o_c $end
$var wire 4 &" p [3:0] $end
$var wire 4 '" g [3:0] $end
$var wire 1 (" P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_6 $end
$var wire 4 )" i_a [3:0] $end
$var wire 4 *" i_b [3:0] $end
$var wire 1 +" i_c $end
$var wire 4 ," o_s [3:0] $end
$var wire 1 -" o_c $end
$scope module u_adder $end
$var wire 4 ." i_a [3:0] $end
$var wire 4 /" i_b [3:0] $end
$var wire 1 +" i_c $end
$var wire 1 0" w_c $end
$var wire 4 1" o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 2" G $end
$var wire 4 3" i_a [3:0] $end
$var wire 4 4" i_b [3:0] $end
$var wire 1 +" i_c $end
$var wire 1 -" o_c $end
$var wire 4 5" p [3:0] $end
$var wire 4 6" g [3:0] $end
$var wire 1 7" P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_7 $end
$var wire 4 8" i_a [3:0] $end
$var wire 4 9" i_b [3:0] $end
$var wire 1 :" i_c $end
$var wire 4 ;" o_s [3:0] $end
$var wire 1 " o_c $end
$scope module u_adder $end
$var wire 4 <" i_a [3:0] $end
$var wire 4 =" i_b [3:0] $end
$var wire 1 :" i_c $end
$var wire 1 >" w_c $end
$var wire 4 ?" o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 @" G $end
$var wire 4 A" i_a [3:0] $end
$var wire 4 B" i_b [3:0] $end
$var wire 1 :" i_c $end
$var wire 1 " o_c $end
$var wire 4 C" p [3:0] $end
$var wire 4 D" g [3:0] $end
$var wire 1 E" P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope task init $end
$upscope $end
$scope task vecInsert $end
$var reg 4 F" i [3:0] $end
$upscope $end
$scope task vecVerify $end
$var reg 4 G" i [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 G"
b0 F"
1E"
b0 D"
b1111 C"
b1000 B"
b111 A"
0@"
b0 ?"
1>"
b1000 ="
b111 <"
b0 ;"
1:"
b1000 9"
b111 8"
07"
b1110 6"
b1 5"
b1111 4"
b1110 3"
12"
b1101 1"
10"
b1111 /"
b1110 ."
1-"
b1101 ,"
0+"
b1111 *"
b1110 )"
0("
b0 '"
b11 &"
b10 %"
b1 $"
0#"
b100 ""
0!"
b10 ~
b1 }
0|
b100 {
1z
b10 y
b1 x
0w
b1001 v
b10 u
b1011 t
b1001 s
1r
b100 q
1p
b1011 o
b1001 n
1m
b100 l
0k
b1011 j
b1001 i
1h
b0 g
b1111 f
b11 e
b1100 d
0c
b1111 b
0a
b11 `
b1100 _
0^
b1111 ]
0\
b11 [
b1100 Z
0Y
b101 X
b10 W
b111 V
b101 U
0T
b1100 S
0R
b111 Q
b101 P
0O
b1100 N
0M
b111 L
b101 K
0J
b0 I
b101 H
b100 G
b1 F
0E
b110 D
0C
b100 B
b1 A
0@
b110 ?
1>
b100 =
b1 <
0;
b1000 :
b10 9
b1010 8
b1000 7
16
b10 5
14
b1010 3
b1000 2
11
b10 0
b1010 /
b1000 .
b1101010001001111110001100010 -
b1010001 ,
b10001111001010110011011101001010 +
b1111110000110011100010100011000 *
b0 )
b0 (
b101110001011110111011001100011011001000010111101000011010011000100000101011111011101000111011000101110011101100110001101100100 '
b10101100100010101000011010110110011110101011101 &
0%
b10001111001010110011011101001010 $
b1111110000110011100010100011000 #
1"
b1101010001001111110001100010 !
$end
#10000
1k
1@"
1>
1z
1+"
0:"
1^
11
1m
1|
b111001 ,
0-"
1c
1"
16
1r
1#"
02"
b100 H
0h
b111 f
b1000 g
b1 &"
0E"
b1000 C"
b111 D"
b1001 9
b110 :
b11 I
b1110 W
b1 X
b1010 u
b100 v
b1100 '"
b1011 5"
b0 6"
1R
1a
1!"
00"
b1011 ?
b1011 D
b0 N
b0 S
b111 ]
b111 b
b11 l
b11 q
b1010 {
b1010 ""
b1100 ,"
b1100 1"
b110 ;"
b110 ?"
b1101100101000110111000010110110 !
b1101100101000110111000010110110 -
b110 0
b110 5
b1111 /
b1111 3
b1111 8
b11 =
b11 B
b11 G
b1101 L
b1101 Q
b1101 V
b1101 [
b1101 `
b1101 e
b1110 j
b1110 o
b1110 t
b1101 y
b1101 ~
b1101 %"
b1010 *"
b1010 /"
b1010 4"
b111 9"
b111 ="
b111 B"
b110 .
b110 2
b110 7
b111 <
b111 A
b111 F
b11 K
b11 P
b11 U
b1010 Z
b1010 _
b1010 d
b100 i
b100 n
b100 s
b1100 x
b1100 }
b1100 $"
b1 )"
b1 ."
b1 3"
b1111 8"
b1111 <"
b1111 A"
b1 G"
1%
b1111010110111101101110100111111 $
b1111010110111101101110100111111 +
b11110001110001001010001101110110 #
b11110001110001001010001101110110 *
b1 F"
b1 )
#11000
b1 (
#20000
0z
0M
1"
0m
0@
1k
1@"
0r
0+"
0E
1^
0|
0:"
1c
0#"
b1001 ,
0-"
b0 I
b0 X
b1011 W
b10 9
b1100 :
b1011 H
b1011 f
b100 g
b1110 u
b0 v
b100 &"
b11 '"
17"
b1111 5"
b1101 C"
b10 D"
0R
0p
0!"
00"
b1011 0
b1011 5
b1100 ?
b1100 D
b1011 N
b1011 S
b11 ]
b11 b
b1111 l
b1111 q
b1010 {
b1010 ""
b1111 ,"
b1111 1"
b11111101011110011101111001011 !
b11111101011110011101111001011 -
b1 ;"
b1 ?"
b1110 /
b1110 3
b1110 8
b1000 =
b1000 B
b1000 G
b0 L
b0 Q
b0 V
b110 [
b110 `
b110 e
b110 j
b110 o
b110 t
b11 y
b11 ~
b11 %"
b1011 *"
b1011 /"
b1011 4"
b11 9"
b11 ="
b11 B"
b1100 .
b1100 2
b1100 7
b11 <
b11 A
b11 F
b1011 K
b1011 P
b1011 U
b1101 Z
b1101 _
b1101 d
b1000 i
b1000 n
b1000 s
b111 x
b111 }
b111 $"
b100 )"
b100 ."
b100 3"
b1110 8"
b1110 <"
b1110 A"
b10 G"
b111011001101100110000010001110 $
b111011001101100110000010001110 +
b11100100011110001101101100111100 #
b11100100011110001101101100111100 *
b10 F"
b10 )
#30000
1z
0:"
1m
0-"
0"
1r
b1111 ,"
b1111 1"
00"
0@"
0k
0+"
0>
1\
0^
0|
01
b10100 ,
1O
0c
0#"
06
1T
0;
b1000 X
b1101 9
b0 :
b1110 H
0Y
b111 W
b10 g
b101 f
b1100 u
b10 v
b0 '"
b1110 &"
b0 D"
04
1R
b1110 0
b1110 5
b1110 ?
b1110 D
b111 N
b111 S
b1010 ]
b1010 b
0a
b0 l
b0 q
1p
b1111 {
b1111 ""
b11011111111100001010011111101110 !
b11011111111100001010011111101110 -
b1101 ;"
b1101 ?"
0>"
b100 /
b100 3
b100 8
b1110 =
b1110 B
b1110 G
b1010 L
b1010 Q
b1010 V
b10 [
b10 `
b10 e
b10 j
b10 o
b10 t
b0 y
b0 ~
b0 %"
b1001 *"
b1001 /"
b1001 4"
b1101 9"
b1101 ="
b1101 B"
b1001 .
b1001 2
b1001 7
b0 <
b0 A
b0 F
b1101 K
b1101 P
b1101 U
b111 Z
b111 _
b111 d
b1110 i
b1110 n
b1110 s
b1110 x
b1110 }
b1110 $"
b110 )"
b110 ."
b110 3"
b0 8"
b0 <"
b0 A"
b11 G"
b11011001000000100010101011100100 $
b11011001000000100010101011100100 +
b110111011100111110100001001 #
b110111011100111110100001001 *
b11 F"
b11 )
#40000
1>
11
b1000 N
b1000 S
1+"
16
1M
1k
1|
1@
b111111 ,
1^
1#"
1E
1c
b1001 u
b111 &"
b1000 '"
b10 6"
b111 C"
b1010 9
b101 :
b11 H
b1100 I
b111 f
b1000 g
b100 v
07"
b1 5"
14
1a
1!"
b101 0
b101 5
b1100 ?
b1100 D
1C
b1000 ]
b1000 b
b10 l
b10 q
b1000 {
b1000 ""
b110 ,"
b110 1"
b1110110100000101000100011000101 !
b1110110100000101000100011000101 -
b111 ;"
b111 ?"
b1101 /
b1101 3
b1101 8
b1101 =
b1101 B
b1101 G
b1011 L
b1011 Q
b1011 V
b1111 [
b1111 `
b1111 e
b1101 j
b1101 o
b1101 t
b1111 y
b1111 ~
b1111 %"
b10 *"
b10 /"
b10 4"
b10 9"
b10 ="
b10 B"
b111 .
b111 2
b111 7
b1110 <
b1110 A
b1110 F
b1100 K
b1100 P
b1100 U
b1000 Z
b1000 _
b1000 d
b100 i
b100 n
b100 s
b1000 x
b1000 }
b1000 $"
b11 )"
b11 ."
b11 3"
b101 8"
b101 <"
b101 A"
b100 G"
b100010111111011111101111011101 $
b100010111111011111101111011101 +
b1010011100001001000110011100111 #
b1010011100001001000110011100111 *
b100 F"
b100 )
#50000
0>
01
1"
06
1@"
0\
0k
0O
b110010 ,
0^
0T
0c
1;
b0 6"
b111 5"
b101 D"
b1111 9
b0 :
b10 H
b1101 I
b100 W
b1 X
b100 f
b1 g
b1011 u
0E"
b1010 C"
04
0R
0a
b1000 ,"
b1000 1"
b1100 ?
b1100 D
b111 N
b111 S
b110 ]
b110 b
b11 l
b11 q
b100 ;"
b100 ?"
1>"
b1001000100000110110011111001111 !
b1001000100000110110011111001111 -
b1111 0
b1111 5
b11 /
b11 3
b11 8
b1 L
b1 Q
b1 V
b1 [
b1 `
b1 e
b100 j
b100 o
b100 t
b1000 y
b1000 ~
b1000 %"
b100 *"
b100 /"
b100 4"
b101 9"
b101 ="
b101 B"
b1100 .
b1100 2
b1100 7
b1111 <
b1111 A
b1111 F
b101 K
b101 P
b101 U
b101 Z
b101 _
b101 d
b1111 i
b1111 n
b1111 s
b1111 x
b1111 }
b1111 $"
b1111 8"
b1111 <"
b1111 A"
b101 G"
0%
b1010100100001000001000111010011 $
b1010100100001000001000111010011 +
b11110011111111110101010111111100 #
b11110011111111110101010111111100 *
b101 F"
b101 )
#60000
1:"
1-"
12"
b111 N
b111 S
0z
0"
1M
1\
0m
0+"
0@"
1@
1O
0r
b1000110 ,
0|
1E
1T
0#"
b110 W
b0 g
b0 v
b100 &"
b10 6"
07"
b1101 5"
b110 :
0;
b1 9
b1100 H
b11 I
b1000 X
b1011 f
b111 u
b11 '"
b1110 C"
b1 D"
1R
0!"
10"
b1101 0
b1101 5
b10 ?
b10 D
b1100 ]
b1100 b
b111 l
b111 q
0p
b1010 {
b1010 ""
b1 ,"
b1 1"
b10001101001111100011100101101 !
b10001101001111100011100101101 -
b1 ;"
b1 ?"
b111 /
b111 3
b111 8
b1011 =
b1011 B
b1011 G
b1010 L
b1010 Q
b1010 V
b10 [
b10 `
b10 e
b1 j
b1 o
b1 t
b11 y
b11 ~
b11 %"
b1011 *"
b1011 /"
b1011 4"
b1111 9"
b1111 ="
b1111 B"
b110 .
b110 2
b110 7
b111 <
b111 A
b111 F
b1100 K
b1100 P
b1100 U
b1001 Z
b1001 _
b1001 d
b110 i
b110 n
b110 s
b111 x
b111 }
b111 $"
b110 )"
b110 ."
b110 3"
b1 8"
b1 <"
b1 A"
b110 G"
b11111011001100010010101010110111 $
b11111011001100010010101010110111 +
b10110011101101001110001110110 #
b10110011101101001110001110110 *
b110 F"
b110 )
#61000
b10 (
#70000
0:"
0-"
02"
0+"
1k
0\
0|
1^
b1010 ,
0O
0#"
1"
1c
0T
1@"
b1101 H
b10 I
b1000 g
b1100 5"
b10 9
b100 :
b1010 W
b1 X
b110 f
b1001 u
b10 '"
b1001 &"
b0 6"
b11 C"
b1000 D"
1a
00"
b1 ?
b1 D
b1101 N
b1101 S
0R
b110 ]
b110 b
b1010 l
b1010 q
b1101 {
b1101 ""
b1100 ,"
b1100 1"
b11 ;"
b11 ?"
b111100110110100110110100011011 !
b111100110110100110110100011011 -
b1011 0
b1011 5
b110 /
b110 3
b110 8
b10 =
b10 B
b10 G
b1011 L
b1011 Q
b1011 V
b1100 [
b1100 `
b1100 e
b1001 j
b1001 o
b1001 t
b100 *"
b100 /"
b100 4"
b1000 9"
b1000 ="
b1000 B"
b100 .
b100 2
b100 7
b1111 <
b1111 A
b1111 F
b1 K
b1 P
b1 U
b1010 Z
b1010 _
b1010 d
b0 i
b0 n
b0 s
b1010 x
b1010 }
b1010 $"
b1000 )"
b1000 ."
b1000 3"
b1011 8"
b1011 <"
b1011 A"
b111 G"
1%
b10000100001110011100101100100110 $
b10000100001110011100101100100110 +
b10111000101000001010000111110100 #
b10111000101000001010000111110100 *
b111 F"
b111 )
#80000
0M
0@
1>
0E
0k
1+"
1:"
11
1\
1z
0^
1|
1-"
16
1O
b1110101 ,
1m
0"
0c
1#"
12"
1T
1r
0@"
b1000 f
b1 &"
b0 5"
b101 :
b1010 9
b0 I
b1000 H
b101 W
b1010 X
b11 g
b10 u
b1101 v
b1000 '"
b1011 6"
0E"
b1110 C"
b0 D"
0a
1!"
10"
b101 0
b101 5
14
b1001 ?
b1001 D
0C
b1001 N
b1001 S
1R
b1111 ]
b1111 b
b1100 l
b1100 q
1p
b10 {
b10 ""
b111 ,"
b111 1"
b11110111001011001111100110010101 !
b11110111001011001111100110010101 -
b1111 ;"
b1111 ?"
0>"
b111 /
b111 3
b111 8
b1000 =
b1000 B
b1000 G
b1010 L
b1010 Q
b1010 V
b11 [
b11 `
b11 e
b1111 j
b1111 o
b1111 t
b1000 y
b1000 ~
b1000 %"
b1011 *"
b1011 /"
b1011 4"
b1010 9"
b1010 ="
b1010 B"
b1101 .
b1101 2
b1101 7
b0 <
b0 A
b0 F
b1111 K
b1111 P
b1111 U
b1011 Z
b1011 _
b1011 d
b1101 i
b1101 n
b1101 s
b1001 x
b1001 }
b1001 $"
b1011 )"
b1011 ."
b1011 3"
b100 8"
b100 <"
b100 A"
b1000 G"
b10101011100011110011101010000111 $
b10101011100011110011101010000111 +
b1001011100111011011111100001101 #
b1001011100111011011111100001101 *
b1000 F"
b1000 )
#90000
1M
1@
0k
1E
0^
0>
0c
0+"
01
0:"
0|
06
b10110 ,
0-"
0#"
02"
b0 u
b0 '"
b100 D"
b10 C"
b0 :
b101 9
b10 I
b1100 H
b10 W
b1101 X
b0 g
b1110 f
b1000 v
b1101 &"
b111 5"
b0 6"
1C
0!"
00"
b110 0
b110 5
04
b0 ?
b0 D
b1101 N
b1101 S
b0 l
b0 q
b1110 {
b1110 ""
b111 ,"
b111 1"
b10100111111000001111110100000110 !
b10100111111000001111110100000110 -
b1010 ;"
b1010 ?"
b100 /
b100 3
b100 8
b1010 =
b1010 B
b1010 G
b1111 L
b1111 Q
b1111 V
b0 [
b0 `
b0 e
b1000 j
b1000 o
b1000 t
b0 y
b0 ~
b0 %"
b1 *"
b1 /"
b1 4"
b100 9"
b100 ="
b100 B"
b1 .
b1 2
b1 7
b110 <
b110 A
b110 F
b1101 K
b1101 P
b1101 U
b1110 Z
b1110 _
b1110 d
b1000 i
b1000 n
b1000 s
b1101 x
b1101 }
b1101 $"
b110 )"
b110 ."
b110 3"
b110 8"
b110 <"
b110 A"
b1001 G"
b1000001000010000000111110100100 $
b1000001000010000000111110100100 +
b1100110110110001110110101100001 #
b1100110110110001110110101100001 *
b1001 F"
b1001 )
#100000
b1010 )
#110000
