$date
	Wed Jul  3 10:42:46 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module CLA_tb $end
$var wire 32 ! o_s [31:0] $end
$var wire 1 " o_c $end
$var reg 32 # i_a [31:0] $end
$var reg 32 $ i_b [31:0] $end
$var reg 1 % i_c $end
$var reg 256 & vcd_file [255:0] $end
$var integer 32 ' j [31:0] $end
$scope module u_CLA $end
$var wire 32 ( i_a [31:0] $end
$var wire 32 ) i_b [31:0] $end
$var wire 1 % i_c $end
$var wire 7 * w_c [6:0] $end
$var wire 32 + o_s [31:0] $end
$var wire 1 " o_c $end
$scope module u_CLA_4bit_block_0 $end
$var wire 4 , i_a [3:0] $end
$var wire 4 - i_b [3:0] $end
$var wire 1 % i_c $end
$var wire 4 . o_s [3:0] $end
$var wire 1 / o_c $end
$scope module u_adder $end
$var wire 4 0 i_a [3:0] $end
$var wire 4 1 i_b [3:0] $end
$var wire 1 % i_c $end
$var wire 1 2 w_c $end
$var wire 4 3 o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 4 G $end
$var wire 4 5 i_a [3:0] $end
$var wire 4 6 i_b [3:0] $end
$var wire 1 % i_c $end
$var wire 1 / o_c $end
$var wire 4 7 p [3:0] $end
$var wire 4 8 g [3:0] $end
$var wire 1 9 P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_1 $end
$var wire 4 : i_a [3:0] $end
$var wire 4 ; i_b [3:0] $end
$var wire 1 < i_c $end
$var wire 4 = o_s [3:0] $end
$var wire 1 > o_c $end
$scope module u_adder $end
$var wire 4 ? i_a [3:0] $end
$var wire 4 @ i_b [3:0] $end
$var wire 1 < i_c $end
$var wire 1 A w_c $end
$var wire 4 B o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 C G $end
$var wire 4 D i_a [3:0] $end
$var wire 4 E i_b [3:0] $end
$var wire 1 < i_c $end
$var wire 1 > o_c $end
$var wire 4 F p [3:0] $end
$var wire 4 G g [3:0] $end
$var wire 1 H P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_2 $end
$var wire 4 I i_a [3:0] $end
$var wire 4 J i_b [3:0] $end
$var wire 1 K i_c $end
$var wire 4 L o_s [3:0] $end
$var wire 1 M o_c $end
$scope module u_adder $end
$var wire 4 N i_a [3:0] $end
$var wire 4 O i_b [3:0] $end
$var wire 1 K i_c $end
$var wire 1 P w_c $end
$var wire 4 Q o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 R G $end
$var wire 4 S i_a [3:0] $end
$var wire 4 T i_b [3:0] $end
$var wire 1 K i_c $end
$var wire 1 M o_c $end
$var wire 4 U p [3:0] $end
$var wire 4 V g [3:0] $end
$var wire 1 W P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_3 $end
$var wire 4 X i_a [3:0] $end
$var wire 4 Y i_b [3:0] $end
$var wire 1 Z i_c $end
$var wire 4 [ o_s [3:0] $end
$var wire 1 \ o_c $end
$scope module u_adder $end
$var wire 4 ] i_a [3:0] $end
$var wire 4 ^ i_b [3:0] $end
$var wire 1 Z i_c $end
$var wire 1 _ w_c $end
$var wire 4 ` o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 a G $end
$var wire 4 b i_a [3:0] $end
$var wire 4 c i_b [3:0] $end
$var wire 1 Z i_c $end
$var wire 1 \ o_c $end
$var wire 4 d p [3:0] $end
$var wire 4 e g [3:0] $end
$var wire 1 f P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_4 $end
$var wire 4 g i_a [3:0] $end
$var wire 4 h i_b [3:0] $end
$var wire 1 i i_c $end
$var wire 4 j o_s [3:0] $end
$var wire 1 k o_c $end
$scope module u_adder $end
$var wire 4 l i_a [3:0] $end
$var wire 4 m i_b [3:0] $end
$var wire 1 i i_c $end
$var wire 1 n w_c $end
$var wire 4 o o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 p G $end
$var wire 4 q i_a [3:0] $end
$var wire 4 r i_b [3:0] $end
$var wire 1 i i_c $end
$var wire 1 k o_c $end
$var wire 4 s p [3:0] $end
$var wire 4 t g [3:0] $end
$var wire 1 u P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_5 $end
$var wire 4 v i_a [3:0] $end
$var wire 4 w i_b [3:0] $end
$var wire 1 x i_c $end
$var wire 4 y o_s [3:0] $end
$var wire 1 z o_c $end
$scope module u_adder $end
$var wire 4 { i_a [3:0] $end
$var wire 4 | i_b [3:0] $end
$var wire 1 x i_c $end
$var wire 1 } w_c $end
$var wire 4 ~ o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 !" G $end
$var wire 4 "" i_a [3:0] $end
$var wire 4 #" i_b [3:0] $end
$var wire 1 x i_c $end
$var wire 1 z o_c $end
$var wire 4 $" p [3:0] $end
$var wire 4 %" g [3:0] $end
$var wire 1 &" P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_6 $end
$var wire 4 '" i_a [3:0] $end
$var wire 4 (" i_b [3:0] $end
$var wire 1 )" i_c $end
$var wire 4 *" o_s [3:0] $end
$var wire 1 +" o_c $end
$scope module u_adder $end
$var wire 4 ," i_a [3:0] $end
$var wire 4 -" i_b [3:0] $end
$var wire 1 )" i_c $end
$var wire 1 ." w_c $end
$var wire 4 /" o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 0" G $end
$var wire 4 1" i_a [3:0] $end
$var wire 4 2" i_b [3:0] $end
$var wire 1 )" i_c $end
$var wire 1 +" o_c $end
$var wire 4 3" p [3:0] $end
$var wire 4 4" g [3:0] $end
$var wire 1 5" P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_CLA_4bit_block_7 $end
$var wire 4 6" i_a [3:0] $end
$var wire 4 7" i_b [3:0] $end
$var wire 1 8" i_c $end
$var wire 4 9" o_s [3:0] $end
$var wire 1 " o_c $end
$scope module u_adder $end
$var wire 4 :" i_a [3:0] $end
$var wire 4 ;" i_b [3:0] $end
$var wire 1 8" i_c $end
$var wire 1 <" w_c $end
$var wire 4 =" o_s [3:0] $end
$upscope $end
$scope module u_pg $end
$var wire 1 >" G $end
$var wire 4 ?" i_a [3:0] $end
$var wire 4 @" i_b [3:0] $end
$var wire 1 8" i_c $end
$var wire 1 " o_c $end
$var wire 4 A" p [3:0] $end
$var wire 4 B" g [3:0] $end
$var wire 1 C" P $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C"
b0 B"
b0 A"
b0 @"
b0 ?"
0>"
b0 ="
0<"
b0 ;"
b0 :"
b0 9"
08"
b0 7"
b0 6"
05"
b0 4"
b0 3"
b0 2"
b0 1"
00"
b0 /"
0."
b0 -"
b0 ,"
0+"
b0 *"
0)"
b0 ("
b0 '"
0&"
b0 %"
b0 $"
b0 #"
b0 ""
0!"
b0 ~
0}
b0 |
b0 {
0z
b0 y
0x
b0 w
b0 v
0u
b0 t
b0 s
b0 r
b0 q
0p
b0 o
0n
b0 m
b0 l
0k
b0 j
0i
b0 h
b0 g
0f
b0 e
b0 d
b0 c
b0 b
0a
b0 `
0_
b0 ^
b0 ]
0\
b0 [
0Z
b0 Y
b0 X
0W
b0 V
b0 U
b0 T
b0 S
0R
b0 Q
0P
b0 O
b0 N
0M
b0 L
0K
b0 J
b0 I
0H
b0 G
b0 F
b0 E
b0 D
0C
b0 B
0A
b0 @
b0 ?
0>
b0 =
0<
b0 ;
b0 :
09
b0 8
b11 7
b10 6
b1 5
04
b100 3
02
b10 1
b1 0
0/
b100 .
b10 -
b1 ,
b100 +
b0 *
b10 )
b1 (
b0 '
b101110001011110111011001100011011001000010111101000011010011000100000100101110011101100110001101100100 &
1%
b10 $
b1 #
0"
b100 !
$end
#10000
b110 7
b111 !
b111 +
b111 .
b111 3
b100 -
b100 1
b100 6
b10 ,
b10 0
b10 5
b100 $
b100 )
b10 #
b10 (
b1 '
#20000
b10 8
b101 7
b1010 !
b1010 +
b1010 .
b1010 3
b110 -
b110 1
b110 6
b11 ,
b11 0
b11 5
b110 $
b110 )
b11 #
b11 (
b10 '
#30000
b0 =
b0 B
0<
b0 *
0/
04
b1100 7
b0 8
b1101 !
b1101 +
b1101 .
b1101 3
b1000 -
b1000 1
b1000 6
b100 ,
b100 0
b100 5
b1000 $
b1000 )
b100 #
b100 (
b11 '
#40000
b1 =
b1 B
1<
b1 *
1/
19
b1111 7
12
b10000 !
b10000 +
b0 .
b0 3
b1010 -
b1010 1
b1010 6
b101 ,
b101 0
b101 5
b1010 $
b1010 )
b101 #
b101 (
b100 '
#50000
14
b1 =
b1 B
1<
b1 *
1/
b100 8
09
b1010 7
b10011 !
b10011 +
b11 .
b11 3
b1100 -
b1100 1
b1100 6
b110 ,
b110 0
b110 5
b1100 $
b1100 )
b110 #
b110 (
b101 '
#60000
b110 8
b1001 7
b10110 !
b10110 +
b110 .
b110 3
b1110 -
b1110 1
b1110 6
b111 ,
b111 0
b111 5
b1110 $
b1110 )
b111 #
b111 (
b110 '
#70000
0<
b0 *
0/
04
b1 F
b1000 7
b0 8
02
b1 =
b1 B
b11001 !
b11001 +
b1001 .
b1001 3
b0 -
b0 1
b0 6
b1 ;
b1 @
b1 E
b1000 ,
b1000 0
b1000 5
b10000 $
b10000 )
b1000 #
b1000 (
b111 '
#80000
b1011 7
b11100 !
b11100 +
b1100 .
b1100 3
b10 -
b10 1
b10 6
b1001 ,
b1001 0
b1001 5
b10010 $
b10010 )
b1001 #
b1001 (
b1000 '
#90000
b1110 7
b11111 !
b11111 +
b1111 .
b1111 3
b100 -
b100 1
b100 6
b1010 ,
b1010 0
b1010 5
b10100 $
b10100 )
b1010 #
b1010 (
b1001 '
#100000
b10 =
b10 B
1<
b1 *
1/
14
b10 8
09
b1101 7
b100010 !
b100010 +
b10 .
b10 3
12
b110 -
b110 1
b110 6
b1011 ,
b1011 0
b1011 5
b10110 $
b10110 )
b1011 #
b1011 (
b1010 '
#110000
b100 7
b1000 8
b100101 !
b100101 +
b101 .
b101 3
b1000 -
b1000 1
b1000 6
b1100 ,
b1100 0
b1100 5
b11000 $
b11000 )
b1100 #
b1100 (
b1011 '
#120000
b111 7
b101000 !
b101000 +
b1000 .
b1000 3
b1010 -
b1010 1
b1010 6
b1101 ,
b1101 0
b1101 5
b11010 $
b11010 )
b1101 #
b1101 (
b1100 '
#130000
b1100 8
b10 7
b101011 !
b101011 +
b1011 .
b1011 3
b1100 -
b1100 1
b1100 6
b1110 ,
b1110 0
b1110 5
b11100 $
b11100 )
b1110 #
b1110 (
b1101 '
#140000
b1110 8
b1 7
b101110 !
b101110 +
b1110 .
b1110 3
b1110 -
b1110 1
b1110 6
b1111 ,
b1111 0
b1111 5
b11110 $
b11110 )
b1111 #
b1111 (
b1110 '
#150000
0<
b0 *
0/
04
b11 F
b0 7
b0 8
b1 .
b1 3
02
b110001 !
b110001 +
b11 =
b11 B
b0 -
b0 1
b0 6
b10 ;
b10 @
b10 E
b0 ,
b0 0
b0 5
b1 :
b1 ?
b1 D
b100000 $
b100000 )
b10000 #
b10000 (
b1111 '
#160000
b11 7
b110100 !
b110100 +
b100 .
b100 3
b10 -
b10 1
b10 6
b1 ,
b1 0
b1 5
b100010 $
b100010 )
b10001 #
b10001 (
b10000 '
#170000
b110 7
b110111 !
b110111 +
b111 .
b111 3
b100 -
b100 1
b100 6
b10 ,
b10 0
b10 5
b100100 $
b100100 )
b10010 #
b10010 (
b10001 '
#180000
b10 8
b101 7
b111010 !
b111010 +
b1010 .
b1010 3
b110 -
b110 1
b110 6
b11 ,
b11 0
b11 5
b100110 $
b100110 )
b10011 #
b10011 (
b10010 '
#190000
b11 =
b11 B
0<
b0 *
0/
04
b1100 7
b0 8
b111101 !
b111101 +
b1101 .
b1101 3
b1000 -
b1000 1
b1000 6
b100 ,
b100 0
b100 5
b101000 $
b101000 )
b10100 #
b10100 (
b10011 '
#200000
b100 =
b100 B
1<
b1 *
1/
19
b1111 7
12
b1000000 !
b1000000 +
b0 .
b0 3
b1010 -
b1010 1
b1010 6
b101 ,
b101 0
b101 5
b101010 $
b101010 )
b10101 #
b10101 (
b10100 '
#210000
14
b100 =
b100 B
1<
b1 *
1/
b100 8
09
b1010 7
b1000011 !
b1000011 +
b11 .
b11 3
b1100 -
b1100 1
b1100 6
b110 ,
b110 0
b110 5
b101100 $
b101100 )
b10110 #
b10110 (
b10101 '
#220000
b110 8
b1001 7
b1000110 !
b1000110 +
b110 .
b110 3
b1110 -
b1110 1
b1110 6
b111 ,
b111 0
b111 5
b101110 $
b101110 )
b10111 #
b10111 (
b10110 '
#230000
0<
b0 *
0/
04
b10 F
b1 G
b1000 7
b0 8
02
b100 =
b100 B
b1001001 !
b1001001 +
b1001 .
b1001 3
b0 -
b0 1
b0 6
b11 ;
b11 @
b11 E
b1000 ,
b1000 0
b1000 5
b110000 $
b110000 )
b11000 #
b11000 (
b10111 '
#240000
b1011 7
b1001100 !
b1001100 +
b1100 .
b1100 3
b10 -
b10 1
b10 6
b1001 ,
b1001 0
b1001 5
b110010 $
b110010 )
b11001 #
b11001 (
b11000 '
#250000
b1110 7
b1001111 !
b1001111 +
b1111 .
b1111 3
b100 -
b100 1
b100 6
b1010 ,
b1010 0
b1010 5
b110100 $
b110100 )
b11010 #
b11010 (
b11001 '
#260000
b101 =
b101 B
1<
b1 *
1/
14
b10 8
09
b1101 7
b1010010 !
b1010010 +
b10 .
b10 3
12
b110 -
b110 1
b110 6
b1011 ,
b1011 0
b1011 5
b110110 $
b110110 )
b11011 #
b11011 (
b11010 '
#270000
b100 7
b1000 8
b1010101 !
b1010101 +
b101 .
b101 3
b1000 -
b1000 1
b1000 6
b1100 ,
b1100 0
b1100 5
b111000 $
b111000 )
b11100 #
b11100 (
b11011 '
#280000
b111 7
b1011000 !
b1011000 +
b1000 .
b1000 3
b1010 -
b1010 1
b1010 6
b1101 ,
b1101 0
b1101 5
b111010 $
b111010 )
b11101 #
b11101 (
b11100 '
#290000
b1100 8
b10 7
b1011011 !
b1011011 +
b1011 .
b1011 3
b1100 -
b1100 1
b1100 6
b1110 ,
b1110 0
b1110 5
b111100 $
b111100 )
b11110 #
b11110 (
b11101 '
#300000
b1110 8
b1 7
b1011110 !
b1011110 +
b1110 .
b1110 3
b1110 -
b1110 1
b1110 6
b1111 ,
b1111 0
b1111 5
b111110 $
b111110 )
b11111 #
b11111 (
b11110 '
#310000
0<
b0 *
0/
04
b110 F
b0 7
b0 8
b0 G
b1 .
b1 3
02
b1100001 !
b1100001 +
b110 =
b110 B
b0 -
b0 1
b0 6
b100 ;
b100 @
b100 E
b0 ,
b0 0
b0 5
b10 :
b10 ?
b10 D
b1000000 $
b1000000 )
b100000 #
b100000 (
b11111 '
#320000
b11 7
b1100100 !
b1100100 +
b100 .
b100 3
b10 -
b10 1
b10 6
b1 ,
b1 0
b1 5
b1000010 $
b1000010 )
b100001 #
b100001 (
b100000 '
#330000
b110 7
b1100111 !
b1100111 +
b111 .
b111 3
b100 -
b100 1
b100 6
b10 ,
b10 0
b10 5
b1000100 $
b1000100 )
b100010 #
b100010 (
b100001 '
#340000
b10 8
b101 7
b1101010 !
b1101010 +
b1010 .
b1010 3
b110 -
b110 1
b110 6
b11 ,
b11 0
b11 5
b1000110 $
b1000110 )
b100011 #
b100011 (
b100010 '
#350000
b110 =
b110 B
0<
b0 *
0/
04
b1100 7
b0 8
b1101101 !
b1101101 +
b1101 .
b1101 3
b1000 -
b1000 1
b1000 6
b100 ,
b100 0
b100 5
b1001000 $
b1001000 )
b100100 #
b100100 (
b100011 '
#360000
b111 =
b111 B
1<
b1 *
1/
19
b1111 7
12
b1110000 !
b1110000 +
b0 .
b0 3
b1010 -
b1010 1
b1010 6
b101 ,
b101 0
b101 5
b1001010 $
b1001010 )
b100101 #
b100101 (
b100100 '
#370000
14
b111 =
b111 B
1<
b1 *
1/
b100 8
09
b1010 7
b1110011 !
b1110011 +
b11 .
b11 3
b1100 -
b1100 1
b1100 6
b110 ,
b110 0
b110 5
b1001100 $
b1001100 )
b100110 #
b100110 (
b100101 '
#380000
b110 8
b1001 7
b1110110 !
b1110110 +
b110 .
b110 3
b1110 -
b1110 1
b1110 6
b111 ,
b111 0
b111 5
b1001110 $
b1001110 )
b100111 #
b100111 (
b100110 '
#390000
0<
b0 *
0/
04
b111 F
b1000 7
b0 8
02
b111 =
b111 B
b1111001 !
b1111001 +
b1001 .
b1001 3
b0 -
b0 1
b0 6
b101 ;
b101 @
b101 E
b1000 ,
b1000 0
b1000 5
b1010000 $
b1010000 )
b101000 #
b101000 (
b100111 '
#400000
b1011 7
b1111100 !
b1111100 +
b1100 .
b1100 3
b10 -
b10 1
b10 6
b1001 ,
b1001 0
b1001 5
b1010010 $
b1010010 )
b101001 #
b101001 (
b101000 '
#410000
b1110 7
b1111111 !
b1111111 +
b1111 .
b1111 3
b100 -
b100 1
b100 6
b1010 ,
b1010 0
b1010 5
b1010100 $
b1010100 )
b101010 #
b101010 (
b101001 '
#420000
b1000 =
b1000 B
1<
b1 *
1/
14
b10 8
09
b1101 7
b10000010 !
b10000010 +
b10 .
b10 3
12
b110 -
b110 1
b110 6
b1011 ,
b1011 0
b1011 5
b1010110 $
b1010110 )
b101011 #
b101011 (
b101010 '
#430000
b100 7
b1000 8
b10000101 !
b10000101 +
b101 .
b101 3
b1000 -
b1000 1
b1000 6
b1100 ,
b1100 0
b1100 5
b1011000 $
b1011000 )
b101100 #
b101100 (
b101011 '
#440000
b111 7
b10001000 !
b10001000 +
b1000 .
b1000 3
b1010 -
b1010 1
b1010 6
b1101 ,
b1101 0
b1101 5
b1011010 $
b1011010 )
b101101 #
b101101 (
b101100 '
#450000
b1100 8
b10 7
b10001011 !
b10001011 +
b1011 .
b1011 3
b1100 -
b1100 1
b1100 6
b1110 ,
b1110 0
b1110 5
b1011100 $
b1011100 )
b101110 #
b101110 (
b101101 '
#460000
b1110 8
b1 7
b10001110 !
b10001110 +
b1110 .
b1110 3
b1110 -
b1110 1
b1110 6
b1111 ,
b1111 0
b1111 5
b1011110 $
b1011110 )
b101111 #
b101111 (
b101110 '
#470000
0<
b0 *
0/
04
b101 F
b10 G
b0 7
b0 8
b1 .
b1 3
02
b10010001 !
b10010001 +
b1001 =
b1001 B
b0 -
b0 1
b0 6
b110 ;
b110 @
b110 E
b0 ,
b0 0
b0 5
b11 :
b11 ?
b11 D
b1100000 $
b1100000 )
b110000 #
b110000 (
b101111 '
#480000
b11 7
b10010100 !
b10010100 +
b100 .
b100 3
b10 -
b10 1
b10 6
b1 ,
b1 0
b1 5
b1100010 $
b1100010 )
b110001 #
b110001 (
b110000 '
#490000
b110 7
b10010111 !
b10010111 +
b111 .
b111 3
b100 -
b100 1
b100 6
b10 ,
b10 0
b10 5
b1100100 $
b1100100 )
b110010 #
b110010 (
b110001 '
#500000
b10 8
b101 7
b10011010 !
b10011010 +
b1010 .
b1010 3
b110 -
b110 1
b110 6
b11 ,
b11 0
b11 5
b1100110 $
b1100110 )
b110011 #
b110011 (
b110010 '
#510000
b1001 =
b1001 B
0<
b0 *
0/
04
b1100 7
b0 8
b10011101 !
b10011101 +
b1101 .
b1101 3
b1000 -
b1000 1
b1000 6
b100 ,
b100 0
b100 5
b1101000 $
b1101000 )
b110100 #
b110100 (
b110011 '
#520000
b1010 =
b1010 B
1<
b1 *
1/
19
b1111 7
12
b10100000 !
b10100000 +
b0 .
b0 3
b1010 -
b1010 1
b1010 6
b101 ,
b101 0
b101 5
b1101010 $
b1101010 )
b110101 #
b110101 (
b110100 '
#530000
14
b1010 =
b1010 B
1<
b1 *
1/
b100 8
09
b1010 7
b10100011 !
b10100011 +
b11 .
b11 3
b1100 -
b1100 1
b1100 6
b110 ,
b110 0
b110 5
b1101100 $
b1101100 )
b110110 #
b110110 (
b110101 '
#540000
b110 8
b1001 7
b10100110 !
b10100110 +
b110 .
b110 3
b1110 -
b1110 1
b1110 6
b111 ,
b111 0
b111 5
b1101110 $
b1101110 )
b110111 #
b110111 (
b110110 '
#550000
0<
b0 *
0/
04
b100 F
b11 G
b1000 7
b0 8
02
b1010 =
b1010 B
b10101001 !
b10101001 +
b1001 .
b1001 3
b0 -
b0 1
b0 6
b111 ;
b111 @
b111 E
b1000 ,
b1000 0
b1000 5
b1110000 $
b1110000 )
b111000 #
b111000 (
b110111 '
#560000
b1011 7
b10101100 !
b10101100 +
b1100 .
b1100 3
b10 -
b10 1
b10 6
b1001 ,
b1001 0
b1001 5
b1110010 $
b1110010 )
b111001 #
b111001 (
b111000 '
#570000
b1110 7
b10101111 !
b10101111 +
b1111 .
b1111 3
b100 -
b100 1
b100 6
b1010 ,
b1010 0
b1010 5
b1110100 $
b1110100 )
b111010 #
b111010 (
b111001 '
#580000
b1011 =
b1011 B
1<
b1 *
1/
14
b10 8
09
b1101 7
b10110010 !
b10110010 +
b10 .
b10 3
12
b110 -
b110 1
b110 6
b1011 ,
b1011 0
b1011 5
b1110110 $
b1110110 )
b111011 #
b111011 (
b111010 '
#590000
b100 7
b1000 8
b10110101 !
b10110101 +
b101 .
b101 3
b1000 -
b1000 1
b1000 6
b1100 ,
b1100 0
b1100 5
b1111000 $
b1111000 )
b111100 #
b111100 (
b111011 '
#600000
b111 7
b10111000 !
b10111000 +
b1000 .
b1000 3
b1010 -
b1010 1
b1010 6
b1101 ,
b1101 0
b1101 5
b1111010 $
b1111010 )
b111101 #
b111101 (
b111100 '
#610000
b1100 8
b10 7
b10111011 !
b10111011 +
b1011 .
b1011 3
b1100 -
b1100 1
b1100 6
b1110 ,
b1110 0
b1110 5
b1111100 $
b1111100 )
b111110 #
b111110 (
b111101 '
#620000
b1110 8
b1 7
b10111110 !
b10111110 +
b1110 .
b1110 3
b1110 -
b1110 1
b1110 6
b1111 ,
b1111 0
b1111 5
b1111110 $
b1111110 )
b111111 #
b111111 (
b111110 '
#630000
b0 L
b0 Q
0K
0>
0<
0C
b0 *
0/
04
b1100 F
b0 7
b0 8
b0 G
b1 .
b1 3
02
b11000001 !
b11000001 +
b1100 =
b1100 B
b0 -
b0 1
b0 6
b1000 ;
b1000 @
b1000 E
b0 ,
b0 0
b0 5
b100 :
b100 ?
b100 D
b10000000 $
b10000000 )
b1000000 #
b1000000 (
b111111 '
#640000
b11 7
b11000100 !
b11000100 +
b100 .
b100 3
b10 -
b10 1
b10 6
b1 ,
b1 0
b1 5
b10000010 $
b10000010 )
b1000001 #
b1000001 (
b1000000 '
#650000
b110 7
b11000111 !
b11000111 +
b111 .
b111 3
b100 -
b100 1
b100 6
b10 ,
b10 0
b10 5
b10000100 $
b10000100 )
b1000010 #
b1000010 (
b1000001 '
#660000
b10 8
b101 7
b11001010 !
b11001010 +
b1010 .
b1010 3
b110 -
b110 1
b110 6
b11 ,
b11 0
b11 5
b10000110 $
b10000110 )
b1000011 #
b1000011 (
b1000010 '
#670000
b1100 =
b1100 B
0<
b0 *
0/
04
b1100 7
b0 8
b11001101 !
b11001101 +
b1101 .
b1101 3
b1000 -
b1000 1
b1000 6
b100 ,
b100 0
b100 5
b10001000 $
b10001000 )
b1000100 #
b1000100 (
b1000011 '
#680000
b1101 =
b1101 B
1<
b1 *
1/
19
b1111 7
12
b11010000 !
b11010000 +
b0 .
b0 3
b1010 -
b1010 1
b1010 6
b101 ,
b101 0
b101 5
b10001010 $
b10001010 )
b1000101 #
b1000101 (
b1000100 '
#690000
14
b1101 =
b1101 B
1<
b1 *
1/
b100 8
09
b1010 7
b11010011 !
b11010011 +
b11 .
b11 3
b1100 -
b1100 1
b1100 6
b110 ,
b110 0
b110 5
b10001100 $
b10001100 )
b1000110 #
b1000110 (
b1000101 '
#700000
b110 8
b1001 7
b11010110 !
b11010110 +
b110 .
b110 3
b1110 -
b1110 1
b1110 6
b111 ,
b111 0
b111 5
b10001110 $
b10001110 )
b1000111 #
b1000111 (
b1000110 '
#710000
0<
b0 *
0/
04
b1101 F
b1000 7
b0 8
02
b1101 =
b1101 B
b11011001 !
b11011001 +
b1001 .
b1001 3
b0 -
b0 1
b0 6
b1001 ;
b1001 @
b1001 E
b1000 ,
b1000 0
b1000 5
b10010000 $
b10010000 )
b1001000 #
b1001000 (
b1000111 '
#720000
b1011 7
b11011100 !
b11011100 +
b1100 .
b1100 3
b10 -
b10 1
b10 6
b1001 ,
b1001 0
b1001 5
b10010010 $
b10010010 )
b1001001 #
b1001001 (
b1001000 '
#730000
b1110 7
b11011111 !
b11011111 +
b1111 .
b1111 3
b100 -
b100 1
b100 6
b1010 ,
b1010 0
b1010 5
b10010100 $
b10010100 )
b1001010 #
b1001010 (
b1001001 '
#740000
b1110 =
b1110 B
1<
b1 *
1/
14
b10 8
09
b1101 7
b11100010 !
b11100010 +
b10 .
b10 3
12
b110 -
b110 1
b110 6
b1011 ,
b1011 0
b1011 5
b10010110 $
b10010110 )
b1001011 #
b1001011 (
b1001010 '
#750000
b100 7
b1000 8
b11100101 !
b11100101 +
b101 .
b101 3
b1000 -
b1000 1
b1000 6
b1100 ,
b1100 0
b1100 5
b10011000 $
b10011000 )
b1001100 #
b1001100 (
b1001011 '
#760000
b111 7
b11101000 !
b11101000 +
b1000 .
b1000 3
b1010 -
b1010 1
b1010 6
b1101 ,
b1101 0
b1101 5
b10011010 $
b10011010 )
b1001101 #
b1001101 (
b1001100 '
#770000
b1100 8
b10 7
b11101011 !
b11101011 +
b1011 .
b1011 3
b1100 -
b1100 1
b1100 6
b1110 ,
b1110 0
b1110 5
b10011100 $
b10011100 )
b1001110 #
b1001110 (
b1001101 '
#780000
b1110 8
b1 7
b11101110 !
b11101110 +
b1110 .
b1110 3
b1110 -
b1110 1
b1110 6
b1111 ,
b1111 0
b1111 5
b10011110 $
b10011110 )
b1001111 #
b1001111 (
b1001110 '
#790000
b0 L
b0 Q
0<
0K
0/
b0 *
0>
04
1H
b1111 F
b0 7
b0 8
0A
b1 .
b1 3
02
b11110001 !
b11110001 +
b1111 =
b1111 B
b0 -
b0 1
b0 6
b1010 ;
b1010 @
b1010 E
b0 ,
b0 0
b0 5
b101 :
b101 ?
b101 D
b10100000 $
b10100000 )
b1010000 #
b1010000 (
b1001111 '
#800000
b11 7
b11110100 !
b11110100 +
b100 .
b100 3
b10 -
b10 1
b10 6
b1 ,
b1 0
b1 5
b10100010 $
b10100010 )
b1010001 #
b1010001 (
b1010000 '
#810000
b110 7
b11110111 !
b11110111 +
b111 .
b111 3
b100 -
b100 1
b100 6
b10 ,
b10 0
b10 5
b10100100 $
b10100100 )
b1010010 #
b1010010 (
b1010001 '
#820000
b10 8
b101 7
b11111010 !
b11111010 +
b1010 .
b1010 3
b110 -
b110 1
b110 6
b11 ,
b11 0
b11 5
b10100110 $
b10100110 )
b1010011 #
b1010011 (
b1010010 '
#830000
b0 L
b0 Q
0K
0>
b1111 =
b1111 B
0A
0<
b0 *
0/
04
b1100 7
b0 8
b11111101 !
b11111101 +
b1101 .
b1101 3
b1000 -
b1000 1
b1000 6
b100 ,
b100 0
b100 5
b10101000 $
b10101000 )
b1010100 #
b1010100 (
b1010011 '
#840000
b1 L
b1 Q
1K
1>
b0 =
b0 B
1A
1<
b11 *
1/
19
b1111 7
12
b100000000 !
b100000000 +
b0 .
b0 3
b1010 -
b1010 1
b1010 6
b101 ,
b101 0
b101 5
b10101010 $
b10101010 )
b1010101 #
b1010101 (
b1010100 '
#850000
b1 L
b1 Q
1K
1>
14
b0 =
b0 B
1A
1<
b11 *
1/
b100 8
09
b1010 7
b100000011 !
b100000011 +
b11 .
b11 3
b1100 -
b1100 1
b1100 6
b110 ,
b110 0
b110 5
b10101100 $
b10101100 )
b1010110 #
b1010110 (
b1010101 '
#860000
b110 8
b1001 7
b100000110 !
b100000110 +
b110 .
b110 3
b1110 -
b1110 1
b1110 6
b111 ,
b111 0
b111 5
b10101110 $
b10101110 )
b1010111 #
b1010111 (
b1010110 '
#870000
0<
0/
b0 L
b0 Q
04
0K
b0 *
0>
0H
b1110 F
b1 G
b1000 7
b0 8
02
b0 =
b0 B
b1001 !
b1001 +
b1001 .
b1001 3
b0 -
b0 1
b0 6
b1011 ;
b1011 @
b1011 E
b1000 ,
b1000 0
b1000 5
b10110000 $
b10110000 )
b1011000 #
b1011000 (
b1010111 '
#880000
b1011 7
b1100 !
b1100 +
b1100 .
b1100 3
b10 -
b10 1
b10 6
b1001 ,
b1001 0
b1001 5
b10110010 $
b10110010 )
b1011001 #
b1011001 (
b1011000 '
#890000
b1110 7
b1111 !
b1111 +
b1111 .
b1111 3
b100 -
b100 1
b100 6
b1010 ,
b1010 0
b1010 5
b10110100 $
b10110100 )
b1011010 #
b1011010 (
b1011001 '
#900000
b1 =
b1 B
1<
b1 *
1/
14
b10 8
09
b1101 7
b10010 !
b10010 +
b10 .
b10 3
12
b110 -
b110 1
b110 6
b1011 ,
b1011 0
b1011 5
b10110110 $
b10110110 )
b1011011 #
b1011011 (
b1011010 '
#910000
b100 7
b1000 8
b10101 !
b10101 +
b101 .
b101 3
b1000 -
b1000 1
b1000 6
b1100 ,
b1100 0
b1100 5
b10111000 $
b10111000 )
b1011100 #
b1011100 (
b1011011 '
#920000
b111 7
b11000 !
b11000 +
b1000 .
b1000 3
b1010 -
b1010 1
b1010 6
b1101 ,
b1101 0
b1101 5
b10111010 $
b10111010 )
b1011101 #
b1011101 (
b1011100 '
#930000
b1100 8
b10 7
b11011 !
b11011 +
b1011 .
b1011 3
b1100 -
b1100 1
b1100 6
b1110 ,
b1110 0
b1110 5
b10111100 $
b10111100 )
b1011110 #
b1011110 (
b1011101 '
#940000
b1110 8
b1 7
b11110 !
b11110 +
b1110 .
b1110 3
b1110 -
b1110 1
b1110 6
b1111 ,
b1111 0
b1111 5
b10111110 $
b10111110 )
b1011111 #
b1011111 (
b1011110 '
#950000
b1 L
b1 Q
1K
1>
1C
0<
b10 *
0/
04
b1010 F
b0 7
b0 8
b100 G
b1 .
b1 3
02
b100100001 !
b100100001 +
b10 =
b10 B
b0 -
b0 1
b0 6
b1100 ;
b1100 @
b1100 E
b0 ,
b0 0
b0 5
b110 :
b110 ?
b110 D
b11000000 $
b11000000 )
b1100000 #
b1100000 (
b1011111 '
#960000
b11 7
b100100100 !
b100100100 +
b100 .
b100 3
b10 -
b10 1
b10 6
b1 ,
b1 0
b1 5
b11000010 $
b11000010 )
b1100001 #
b1100001 (
b1100000 '
#970000
b110 7
b100100111 !
b100100111 +
b111 .
b111 3
b100 -
b100 1
b100 6
b10 ,
b10 0
b10 5
b11000100 $
b11000100 )
b1100010 #
b1100010 (
b1100001 '
#980000
b10 8
b101 7
b100101010 !
b100101010 +
b1010 .
b1010 3
b110 -
b110 1
b110 6
b11 ,
b11 0
b11 5
b11000110 $
b11000110 )
b1100011 #
b1100011 (
b1100010 '
#990000
b10 =
b10 B
0<
b10 *
0/
04
b1100 7
b0 8
b100101101 !
b100101101 +
b1101 .
b1101 3
b1000 -
b1000 1
b1000 6
b100 ,
b100 0
b100 5
b11001000 $
b11001000 )
b1100100 #
b1100100 (
b1100011 '
#1000000
b1100100 '
#1010000
